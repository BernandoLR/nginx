# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: |
          docker build -t bernando/nginx:latest .

      # Step 5: Push the Docker image to Docker Hub
      - name: Push the Docker image to Docker Hub
        run: |
          docker push bernando/nginx:latest

  nginx-1:
    runs-on: self-hosted  # Use the self-hosted runner
    needs : build

    steps:
      # Step 1: Log in to Docker Hub again in the second job
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Pull the Docker image from Docker Hub
      - name: Pull the Docker image
        run: |
          docker pull bernando/nginx:latest

      # Step 3: List all running containers (Check if nginx container exists)
      - name: Check for running Nginx container
        run: |
          echo "Listing running containers..."
          docker ps  # This lists only running containers
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            echo "Nginx container is running with ID: $CONTAINER_ID"
          else
            echo "No Nginx container is currently running."
          fi


      # Step 4: Stop the Nginx container if it exists
      - name: Stop Nginx container
        run: |
          echo "Stopping Nginx container"
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            docker stop $CONTAINER_ID
          else
            echo "No Nginx container is currently running."
          fi
          
          
      # Step 5: Remove the Nginx container if it exists
      - name: Remove Nginx container
        run: |
          echo "Removing Nginx container"
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            docker rm $CONTAINER_ID
          else
            echo "No Nginx container is currently running."
          fi
          
      # Step 3: Run the Docker container
      - name: Run the Docker container
        run: |
          docker run -d --name nginx -p 80:80 bernando/nginx:latest

      # Step 4: Optional - Check the running containers
      - name: List running Docker containers
        run: |
          docker ps

  nginx-2:
    runs-on: self-hosted  # Use the self-hosted runner
    needs : build

    steps:
      # Step 1: Log in to Docker Hub again in the second job
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Pull the Docker image from Docker Hub
      - name: Pull the Docker image
        run: |
          docker pull bernando/nginx:latest

      - name: Check for running Nginx container
        run: |
          echo "Listing running containers..."
          docker ps  # This lists only running containers
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            echo "Nginx container is running with ID: $CONTAINER_ID"
          else
            echo "No Nginx container is currently running."
          fi


      # Step 4: Stop the Nginx container if it exists
      - name: Stop Nginx container
        run: |
          echo "Stopping Nginx container"
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            docker stop $CONTAINER_ID
          else
            echo "No Nginx container is currently running."
          fi
          
          
      # Step 5: Remove the Nginx container if it exists
      - name: Remove Nginx container
        run: |
          echo "Removing Nginx container"
          CONTAINER_ID=$(docker ps -aqf "name=nginx")  # Filter by nginx image to get the container ID
          if [ -n "$CONTAINER_ID" ]; then
            docker rm $CONTAINER_ID
          else
            echo "No Nginx container is currently running."
          fi
          
      # Step 3: Run the Docker container
      - name: Run the Docker container
        run: |
          docker run -d --name nginx -p 80:80 bernando/nginx:latest

      # Step 4: Optional - Check the running containers
      - name: List running Docker containers
        run: |
          docker ps
